############### Config options ##################

[gcode_macro _BED_FAN_VARS]
variable_threshold: 100		# If bed temp target is above this threshold, fans will be enabled. If temp is set to below this threshold, fans will be disabled.
variable_fast: 0.6		# Fan speed once bed temp is reached  
variable_slow: 0.2		# Fan speed while bed is heating
gcode:

########## Bed Fans #########

##  Bed fans - FAN4
[fan_generic bed_fans]
pin: PD13
kick_start_time: 0.5
off_below: 0.1

########## Aliases #########

[gcode_macro BED_FANS_SLOW]
gcode:
	# Vars
	{% set SLOW = printer["gcode_macro _BED_FAN_VARS"].slow|float %}
	
	SET_FAN_SPEED FAN=bed_fans SPEED={SLOW}

[gcode_macro BED_FANS_FAST]
gcode:
	# Vars
	{% set FAST = printer["gcode_macro _BED_FAN_VARS"].fast|float %}
	
	SET_FAN_SPEED FAN=bed_fans SPEED={FAST}

[gcode_macro BED_FANS_OFF]
gcode:
	SET_FAN_SPEED FAN=bed_fans SPEED=0

############ Command overrides ############

# Override, set fan speeds to low and start monitoring loop.
[gcode_macro SET_HEATER_TEMPERATURE]
rename_existing: _SET_HEATER_TEMPERATURE
gcode:
	# Parameters
	{% set HEATER = params.HEATER|default("None") %}
	{% set TARGET = params.TARGET|default(0)|int %}
	# Vars
	{% set THRESHOLD = printer["gcode_macro _BED_FAN_VARS"].threshold|int %}

	_SET_HEATER_TEMPERATURE HEATER={HEATER} TARGET={TARGET}

	# Set fans to low if heater_bed temp is requested above threshold temp, and kick off monitoring loop.
	{% if HEATER|lower == "heater_bed" %}
		{% if TARGET >= THRESHOLD %}
			BED_FANS_SLOW
			UPDATE_DELAYED_GCODE ID=bed_fan_loop DURATION=1
		{% else %}
			BED_FANS_OFF
			UPDATE_DELAYED_GCODE ID=bed_fan_loop DURATION=0 #	Cancel bed fan loop if it's running
		{% endif %}
	{% endif %}
	
# Override M190 (Wait for Bed Temperature)
# As a bonus, use TEMPERATURE_WAIT so we don't have to wait for PID to level off.
[gcode_macro M190]
rename_existing: M99190
gcode:
	# Parameters
	{% set S = params.S|int %}
	# Vars
	{% set THRESHOLD = printer["gcode_macro _BED_FAN_VARS"].threshold|int %}
	
	{% if S >= THRESHOLD %}
		BED_FANS_SLOW																# >= Threshold temp: Low speed fans while heating 
	{% else %}
		BED_FANS_OFF																# < Threshold temp: Turn bed fans off
	{% endif %}                                        

	M99190 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}				# Set bed temp

	# Post-heating fan speeds
	{% if S >= THRESHOLD %}								    
		BED_FANS_FAST															# >= Threshold temp: Higher speed fans after heating finished
	{% endif %}
	
# Replace M140 (Set Bed Temperature) to just be an alias of SET_HEATER_TEMPERATURE (which has associated bed fan logic if enabled)
[gcode_macro M140]
rename_existing: M99140
gcode:
	# Parameters
	{% set S = params.S|float %}
	
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={S}
	
# Replace TURN_OFF_HEATERS
[gcode_macro TURN_OFF_HEATERS]
rename_existing: _TURN_OFF_HEATERS
gcode:
	BED_FANS_OFF
	_TURN_OFF_HEATERS
	
################ Monitoring loop #####################

# Turns bed fans to "fast" speed once target bed temp is reached.
[delayed_gcode bed_fan_loop]
gcode:
	# Vars
	{% set THRESHOLD = printer["gcode_macro _BED_FAN_VARS"].threshold|int %}
	
	{% if printer.heater_bed.target >= THRESHOLD %}								# Continue only if target temp greater than threshold.
		{% if printer.heater_bed.temperature|int >= (printer.heater_bed.target|int - 1) %}
			BED_FANS_FAST															# If within 1 degree of target temp: Higher speed fans
		{% else %}
			UPDATE_DELAYED_GCODE ID=bed_fan_loop DURATION=5						# If temp not reached yet: loop again
		{% endif %}
	{% endif %}
